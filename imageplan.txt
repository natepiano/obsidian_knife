Cleanup Image management - a new structure to store image info

Migration Plan:

First phase - add new image_file_info.rs with proposed new types - DONE
First Phase - Add New Types - DONE
These types are in image_file_info.rs - DONE
Tests are in image_file_info_tests.rs - DONE

Second Phase - restructure ObsidianFileInfo creation DONE
a. Create ImageFiles struct (similar to MarkdownFiles)- DONE
b. Modify ObsidianRepositoryInfo: - DONE
c. Create ObsidianRepositoryInfo::new(): DONE
d. Update existing functions to work with both old and new structures until we're ready to switch over completely. DONE

Third Phase - Shadow Implementation
a. Modify group_images() to create ImageFileInfo instances internally
b. Make it convert back to old types (ImageGroupType etc) for return
c. Add tests to verify old and new implementations produce same results
d. Add conversion functions between old and new types

Fourth Phase - Start Using New Types
a. Modify ObsidianRepositoryInfo to store Vec<ImageFileInfo> instead of HashMap<PathBuf, ImageReferences>
b. Update analyze_images() to work with Vec<ImageFileInfo>
c. Update execute_image_deletions() to work with Vec<ImageFileInfo>
d. Keep old functions as deprecated but working
e. Add tests for new implementations

Fifth Phase - Clean Up
a. Remove old types and functions once all tests pass:
   - ImageGroupType
   - ImageReferences
   - group_images() old version
   - determine_group_type()
   - discuss: pub image_path_to_references_map: HashMap<...>,   // Will be removed later
b. Remove conversion code between old/new types
c. Clean up any unused dependencies
d. Final pass of tests
